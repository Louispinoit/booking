{% extends 'base.html.twig' %}

{% block title %}{{ categorie.name }} - BliblHiTech{% endblock %}



{% block body %}
    <style>
        .example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
        .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
    </style>

<div class="example-wrapper">

<h1 class="text-xl font-bold mb-5 " style="text-align: center">{{ categorie.name }}</h1>

    <div class="grid grid-cols-3 gap-8">
        {% for book in books %}

            <div id="defaultModal{{ book.id }}" tabindex="-1" aria-hidden="true" class="fixed top-0 left-0 right-0 z-50 hidden w-full p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full">
                <div class="relative w-full max-w-2xl max-h-full">
                    <!-- Modal content -->
                    <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
                        <!-- Modal header -->
                        <div class="flex items-start justify-between p-4 border-b rounded-t dark:border-gray-600">
                            <h3 class="text-xl font-semibold text-gray-900 dark:text-white">
                                Reservation de {{ book.title }}
                            </h3>
                            <button type="button" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white" data-modal-hide="defaultModal{{ book.id }}">
                                <svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                                </svg>
                                <span class="sr-only">Close modal</span>
                            </button>
                        </div>
                        <!-- Modal body -->
                        <div class="p-6 space-y-6">
                            <div class="flex items-center space-x-4">
                                <label for="reservationStartDate{{ book.id }}" class="block text-gray-700 dark:text-gray-400 font-medium">Date d'emprunt :</label>
                                <input type="text" id="reservationStartDate{{ book.id }}" class="bg-gray-100 border-gray-300 py-2 px-4 rounded-lg text-gray-700 dark:text-gray-400" value="{{ todayDate }}" readonly>
                            </div>
                            <div class="flex items-center space-x-4">
                                <label for="reservationEndDate{{ book.id }}" class="block text-gray-700 dark:text-gray-400 font-medium">Date de fin :</label>
                                <input type="date" id="reservationEndDate{{ book.id }}" class="bg-gray-100 border-gray-300 py-2 px-4 rounded-lg text-gray-700 dark:text-gray-400">
                            </div>
                        </div>
                        <!-- Modal footer -->
                        <div class="flex items-center p-6 space-x-2 border-t border-gray-200 rounded-b dark:border-gray-600">
                            <button data-modal-hide="defaultModal{{ book.id }}" data-book-id="{{ book.id }}" type="button" class="reservation-button text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Réserver</button>
                            <button data-modal-hide="defaultModal{{ book.id }}" type="button" class="text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-blue-300 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600">Annuler</button>
                        </div>
                    </div>
                </div>
            </div>



            <div class="bg-white rounded-lg shadow-md flex flex-col">
                <div class="p-4">
                    <h5 class="text-xl font-bold mb-2">{{ book.title }}</h5>
                    <h6 class="text-sm text-gray-500 mb-2">{{ book.author }}</h6>
                    <p class="text-gray-700 text-sm h-20 overflow-hidden">{{ book.description }}</p>
                </div>
                <div class="flex-grow flex justify-end items-end p-4">
                    <a href="#"  data-modal-target="defaultModal{{ book.id }}" data-modal-toggle="defaultModal{{ book.id }}" class="mr-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">Réserver</a>
                    <a href="{{ path('book_reviews', {'id': book.id}) }}" class=" text-blue-500 hover:underline">Voir les avis</a>

                </div>
            </div>
        {% endfor %}
    </div>

    <a href="{{ path('app_home') }}" class="fixed top-4 left-4 bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600">Retour</a>



</div>

    <script>
        function sendReservationData(bookId, startDate, endDate) {
            fetch('/reservation', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    bookId: bookId,
                    startDate: startDate,
                    endDate: endDate
                })
            })
                .then(response => {
                    if (response.ok) {
                        alert('Réservation effectuée avec succès !');
                    } else {
                        alert('Une erreur s\'est produite lors de la réservation.');
                    }
                })
                .catch(error => {
                    console.error(error);
                    alert('Une erreur s\'est produite lors de la réservation.');
                });
        }

        const reservationButtons = document.querySelectorAll('.reservation-button');
        reservationButtons.forEach(button => {
            button.addEventListener('click', () => {
                const bookId = button.dataset.bookId;
                const startDate = document.getElementById('reservationStartDate' + bookId).value;
                const endDate = document.getElementById('reservationEndDate' + bookId).value;
                sendReservationData(bookId, startDate, endDate);
            });
        });
    </script>

    </script>

{% endblock %}
